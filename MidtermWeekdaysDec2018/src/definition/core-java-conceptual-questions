Please answer the below core-java Questions:


What jdk contains or composed of and define each components?

Answer: Following is a list of the main components of the JDK:
The Runtime Interpreter
The Compiler
The Applet Viewer
The Debugger
The Class File Disassembler
The Header and Stub File Generator
The Documentation Generator
Applet Demos
API Source Code

The Runtime Interpreter: The Java runtime interpreter (java) is a stand-alone version of the Java interpreter built into the HotJava browser. The runtime interpreter provides the support to run Java executable programs in compiled, bytecode format.

The Compiler: The Java compiler (javac) is used to compile Java source code files into executable Java bytecode classes. In Java, source code files have the extension .java.

The Applet Viewer: The applet viewer is a tool that serves as a minimal test bed for final release Java applets. You can use the applet viewer to test your programs instead of having to wait for HotJava to support the final release of Java.

The Debugger: A debugger is a computer program used by programmers to test and debug a target program. Debuggers may use instruction-set simulators, rather than running a program directly on the processor to achieve a higher level of control over its execution. This allows debuggers to stop or halt the program according to specific conditions.

The Class File Disassembler: The javap command disassembles a class file. Its output depends on the options used. If no options are used, javap prints out the package, protected, and public fields and methods of the classes passed to it. javap prints its output to stdout.

The Header and Stub File Generator: javah generates C header and source files that are needed to implement native methods. The generated header and source files are used by C programs to reference an object's instance variables from native source code. The .h file contains a struct definition whose layout parallels the layout of the corresponding class. The fields in the struct correspond to instance variables in the class.

The Documentation Generator: javadoc parses the declarations and documentation comments in a set of Java source files and produces a corresponding set of HTML pages describing (by default) the public and protected classes, inner classes, interfaces, constructors, methods, and fields.

API Source Code: An application program interface (API) is a set of routines, protocols, and tools for building software applications. Basically, an API specifies how software components should interact.


What is IDE?
An Integrated Development Environment (IDE) is an application that facilitates application development. In general, an IDE is a graphical user interface (GUI)-based workbench designed to aid a developer in building software applications with an integrated environment combined with all the required tools at hand.


What are the IDEs available in the market to support java?
The top 11 Free IDE for Java Coding, Development & Programming
Netbeans
Eclipse
Intellij
Android Studio
Enide Studio 2014
Bluej
Jedit
Jgrasp
Jsource
Jdeveloper
Drjava


Explain the entire java life cycle.

In this article we are going to learn some interesting things about the life cycle of a Java program.
Life cycle of a java program tells us what happens right from the point when we type source code in a text editor to the point that source code is converted into machine code (0’s and 1’s).
There are three main stages in the life cycle of a java program. They are:
Editing the program
Compiling the source code
Executing the byte code
First, you will start with typing the program in a text-editor (ex: notepad, notepad++, wordpad, textedit etc). After completing editing of the program, we have to save the file. While saving the file you should remember that the file must be saved with.java extension. For example, let’s think that I had written a Java program which contains a single class Sample (more on classes in future posts). It is a good convention to save the file with the name of the class. So, as per my example, the file will be saved as Sample.java.
Second step is compilation. The name of the Java compiler is javac. The input to the compiler is Java source code which is available in Sample.java. The output of the compiler is machine independent or platform independent code which is known as bytecode. The file which is generated after compilation is .class file. As per my example, the bytecode file will be Sample.class.
Last step is execution. The bytecode generated by the compiler will be executed by Java Virtual Machine (JVM). Input to the JVM is bytecode and output is machine code (0’s and 1’s) which will be executed by the CPU of the local machine.



what is class?

A class is an entity that determines how an object will behave and what the object will contain. In other words, it is a blueprint or a set of instruction to build a specific type of object.


What is object?
An object is nothing but a self-contained component which consists of methods and properties to make a particular type of data useful. Object determines the behavior of the class. When you send a message to an object, you are asking the object to invoke or execute one of its methods.

What is the entry point of an application?
An application entry point identifies a resource that is an access point to an application.
 Application entry points are used to control users' access to different versions of an application that is deployed on a platform.


Why main is static?
Without having declared main method static , your program will successfully compile but won't execute and report error at run time. This is necessary since main is called by the Java interpreter before any objects are made. The keyword void simply tells the compiler that main does not return a value.


Which class is the superclass of all classes?
java.lang.Object is the super class of every classes in Java


What is difference between path and classpath variables?

Major Differences between Path and Classpath is: 

1).Path is an environment variable which is used by the operating system to find the executables.

Classpath is an environment variable which is used by the Java compiler to find the path, of classes.ie in J2EE we give the path of jar files.


2).PATH is nothing but setting up an environment for operating system. Operating System will look in this PATH for executables.

Classpath is nothing but setting up the environment for Java. Java will use to find compiled classes

3).Path refers to the system while classpath refers to the Developing Envornment.



What is the difference between an Interface and Abstract class?
Difference Between Interface and Abstract Class
Main difference is methods of a Java interface are implicitly abstract and cannot have implementations. A Java abstract class can have instance methods that implements a default behavior.
1.Variables declared in a Java interface is by default final. An  abstract class may contain non-final variables.
2.Members of a Java interface are public by default. A Java abstract class can have the usual flavors of class members like private, protected, etc..
3.Java interface should be implemented using keyword “implements”; A Java abstract class should be extended using keyword “extends”.
4.An interface can extend another Java interface only, an abstract class can extend another Java class and implement multiple Java interfaces.
5.A Java class can implement multiple interfaces but it can extend only one abstract class.
6.Interface is absolutely abstract and cannot be instantiated; A Java abstract class also cannot be instantiated, but can be invoked if a main() exists.
7.In comparison with java abstract classes, java interfaces are slow as it requires extra indirection.


Can you make an Object from an Interface and Abstract class ? if not how do you use it ?

You cannot create an instance of an abstract class because it does not have a complete implementation. If it does, it should not be marked abstract in the first place. The abstract modifier can be used with classes, methods, properties, indexers, and events.



what is Access Specifier?

An access specifier is a defining code element that can determine which elements of a program are allowed to access a specific variable or other piece of data.


What is OOP ? Define each feature of java OOP.
OOP concepts in Java are the main ideas behind Java’s Object Oriented Programming. They are an abstraction, encapsulation, inheritance and polymorphism.

List of OOP Concepts in Java
There are four main OOP concepts in Java. These are:
Abstraction. Abstraction means using simple things to represent complexity. We all know how to turn the TV on, but we don’t need to know how it works in order to enjoy it. In Java, abstraction means simple things like objects, classes, and variables represent more complex underlying code and data. This is important because it lets avoid repeating the same work multiple times.
Encapsulation. This is the practice of keeping fields within a class private, then providing access to them via public methods. It’s a protective barrier that keeps the data and code safe within the class itself. This way, we can re-use objects like code components or variables without allowing open access to the data system-wide.
Inheritance. This is a special feature of Object Oriented Programming in Java. It lets programmers create new classes that share some of the attributes of existing classes. This lets us build on previous work without reinventing the wheel.
Polymorphism. This Java OOP concept lets programmers use the same word to mean different things in different contexts. One form of polymorphism in Java is method overloading. That’s when different meanings are implied by the code itself. The other form is method overriding. That’s when the different meanings are implied by the values of the supplied variables. See more on this below.





What is Java Package and which package is imported by default?
Package in Java is a mechanism to encapsulate a group of classes, sub packages and interfaces.
java.lang package is imported by default


What is API? Name list of API that you have used so far.
The API Name of a field is the technical name for a field that is used behind the scenes to Identify all of the fields you have in your different systems.


Java Packages that contain the API
javax.activation
javax.mail
javax.jms
javax.faces


Does java support multiple inheritance, explain why or why not?

java doenot support multiple inheritance. suppose c is the child class extending from both parent class a and parent class b with some methods defined in them. Then child class cannot understand which class method to call. so there is a confusion here which leads to ambiguity and leads to compile time error.This is the reason java doesnot support multiple inheritance

What is method overloading and when it happens?
Overloading occurs when two or more methods in one class have the same method name but different parameters. Overriding means having two methods with the same method name and parameters (i.e., method signature). One of the methods is in the parent class and the other is in the child class.



Explain exceptions in java and how to handle it.
An exception object is an instance of an exception class. It gets created and handed to the Java runtime when an exceptional event occurred that disrupted the normal flow of the application. This is called “to throw an exception” because in Java you use the keyword “throw” to hand the exception to the runtime.


What is static keyword in java? How it has been used in variables and methods ?
The static keyword is used in java mainly for memory management. It is used with variables, methods, blocks and nested class. It is a keyword that are used for share the same variable or method of a given class. This is used for a constant variable or a method that is the same for every instance of a class.

he void keyword is used to declare that a method does not return any value. Used in field declarations to specify that the variable is modified asynchronously by concurrently running threads. Methods, classes and interfaces thus cannot be declared volatile, nor can local variables or parameters.


What is final and how it has been used variables and methods?

The final keyword in java is used to restrict the user. The java final keyword can be used in many context. Final can be:
1.variable
2.method
3.class

Final keyword in java. final keyword is used in different contexts. First of all, final is a non-access modifier applicable only to a variable, a method or a class.Following are different contexts where final is used. When a variable is declared with final keyword, its value can't be modified, essentially, a constant.


What is final, finally and finalize?

Final is a keyword.Final is used to apply restrictions on class, method and variable. Final class can't be inherited, final method can't be overridden and final variable value can't be changed.

Finally is a block.Finally is used to place important code, it will be executed whether exception is handled or not.

Finalize is a method. Finalize is used to perform clean up processing just before object is garbage collected.


What is a constructor ?
A constructor is a special method of a class or structure in object-oriented programming that initializes an object of that type. A constructor is an instance method that usually has the same name as the class, and can be used to set the values of the members of an object, either to default or to user-defined values.


Can we have multiple constructors in a class?
A Java constructor is special method that is called when an object is instantiated. In other words, when you use the new keyword. The constructor initializes the newly created object.



If we don't have a constructor declared, what is called during the object creation?
If a class does not explicitly declare any, the Java compiler automatically provides a no-argument constructor, called the default constructor

What is "this" keyword in java ?
Keyword THIS is a reference variable in Java that refers to the current object. ... It can be used to refer instance variable of current class

What is "super" keyword in java? How many possible way can you use?
super is a keyword. It is used inside a sub-class method definition to call a method defined in the super class.

In the Java programming language, a keyword is one of 50 reserved words that have a predefined meaning in the language; because of this, programmers cannot use keywords as names for variables, methods, classes, or as any other identifier. Of these 50 keywords, 48 are in use and 2 are not in use.



What is JVM stand for ?
A Java virtual machine (JVM) is a virtual machine that enables a computer to run Java programs as well as programs written in other languages that are also compiled to Java bytecode. The JVM is detailed by a specification that formally describes what is required of a JVM implementation.




Is JVM platform independent?
The JVM must be platform dependent to allow your Java to run on the specific platform.
A JVM for Windows will translate your Java into different system calls than a JVM for OS X. No, JVMs are not platform independent. In fact they are platform specific run time environment provided by the vendor.



What version of java are you using?
Java 8.0.12

What is JAR stand for ?
AR stands for "Java Archive"

What is the difference between JDK and JVM?
Jdk is for development purpose and it is include execution environment also. But jvm is purely run time environment hence u will not be able to compile source file using jvm


What is the difference between JVM and JRE?
The JRE is the environment within which the virtual machine runs. JRE is the container, JVM is the content. Java Runtime Environment contains JVM, class libraries, and other supporting files. It does not contain any development tools such as compiler, debugger, etc.


What is compile time and run time?
When an application is running, it is called runtime. The terms "runtime" and "compile time" are often used by programmers to refer to different types of errors. A compile time error is a problem such as a syntax error or missing file reference that prevents the program from successfully compiling.

What is heap?
heap is a specialized tree-based data structure which is essentially an almost complete tree that satisfies the heap property

How java manage it's memory?
The JVM loads the code, verifies the code, executes the code, manages memory (this includes allocating memory from the Operating System (OS), managing Java allocation including heap compaction and removal of garbage objects) and finally provides the runtime environment.



What is the difference between String, StringBuffer and StringBuilder?

Mutability Difference:
String is immutable, if you try to alter their values, another object gets created, whereas StringBuffer and StringBuilder are mutable so they can change their values.
Thread-Safety Difference:
The difference between StringBuffer and StringBuilder is that StringBuffer is thread-safe. So when the application needs to be run only in a single thread then it is better to use StringBuilder. StringBuilder is more efficient than StringBuffer.


What is Singleton class?
In object-oriented programming, a singleton class is a class that can have only one object (an instance of the class) at a time.


What is Serialization and Deserialization?
Serialization is a mechanism of converting the state of an object into a byte stream. Deserialization is the reverse process where the byte stream is used to recreate the actual Java object in memory. This mechanism is used to persist the object.



when to use transient variable in java?
The Java transient keyword is used on class attributes/variables to indicate that serialization process of such class should ignore such variables while creating a persistent byte stream for any instance of that class. A transient variable is a variable that can not be serialized.

Difference between while and do..while loop?
Only difference between these two loops is that, in while loops, test expression is checked at first but, in do...while loop code is executed at first then the condition is checked. So, the code are executed at least once in do...while loops.

What is Enum?
A Java Enum is a special Java type used to define collections of constants. More precisely, a Java enum type is a special kind of Java class. An enum can contain constants, methods etc.


What is Iterator?
Iterator is an object that enables a programmer to traverse a container, particularly lists.


Which one will take more memory, an int or Integer?
An integer, which is arbitrarily large. An int is bounded by the definition of your language, or hardware environment and therefore guaranteed to be less than “arbitrarily large”.

Why is String Immutable in Java?
The string is Immutable in Java because String objects are cached in String pool


What is constructor chaining in Java?
Constructor chaining is the process of calling one constructor from another constructor with respect to current object.

The difference between Serial and Parallel Garbage Collector?
There are two differences between a parallel and a CMS collectors:
1) the parallel uses multiple GC threads, while the CMS uses only one.
2) the parallel is a 'stop-the-world' collector, while the CMS stops the world only during the initial mark and remark phases.
during the concurrent marking and sweeping phases, the CMS thread runs along with the application's threads.


What is JIT stands for?
JIT stands for Just In time compilation

Explain Java Heap space and Garbage collection?
When the heap becomes full, garbage is collected. During the garbage collection objects that are no longer used are cleared, thus making space for new objects. ... For example Java methods, thread stacks and native handles are allocated in memory separate from the heap, as well as JVM internal data structures.

Can you guarantee the garbage collection process?
Garbage collection does not guarantee that a program will not run out of memory. It is possible for programs to use up memory resources faster than they are garbage collected. It is also possible for programs to create objects that are not subject to garbage collection.

What is the difference between stack and heap in Java?
The main difference between heap and stack is that stack memory is used to store local veriables and function call while heap memory is used to store objects in Java. No matter, where the object is created in code e.g. as a member variable, local variable or class variable, they are always created inside heap space in Java.



What is reflection in java and why is it useful?
Reflection is an API which is used to examine or modify the behavior of methods, classes, interfaces at runtime.

Reflection is a process of exploring and examining ourselves, our perspectives, attributes, experiences and actions / interactions. It helps us gain insight and see how to move forward. Reflection is often done as writing, possibly because this allows us to probe our reflections and develop them more thoughtfully.

what is multithreading in java?
Multithreading in java is a process of executing multiple threads simultaneously. A thread is a lightweight sub-process, the smallest unit of processing. Multiprocessing and multithreading, both are used to achieve multitasking.


What is the use of synchronization in Java?
Synchronized keyword in Java is used to provide mutually exclusive access to a shared resource with multiple threads in Java. Synchronization in Java guarantees that no two threads can execute a synchronized method which requires the same lock simultaneously or concurrently.



What is Framework?
framework is a real or conceptual structure intended to serve as a support or guide for the building of something that expands the structure into something useful.

What are the testing Framework available in java?
Junit
Rest Accured
Selenium
Testng
Mockito
Spock Freamwork
Cucumber
Spring test
Dbunit
Robot Freamwork



Difference between jUnit and testNG?
JUnit4 and TestNG Feature comparison
JUnit provides an easier and readable approach to test known as Parameterized test. Both TestNG and JUnit supports parameterized test but differ in the way they define the parameter value. Let see this one by one. The "@RunWith" and "@Parameter" annotations are used to provide parameter value for the unit test.



What are the dependencies for this project?
Dependencies are the relationships of the preceding tasks to the succeeding tasks. Tasks may have multiple preceding tasks and multiple succeeding tasks.


what is dependency injection in java?
In software engineering, dependency injection is a technique whereby one object (or static method) supplies the dependencies of another object. A dependency is an object that can be used (a service).

What is static binding and dynamic binding?
Static binding in Java occurs during compile time while dynamic binding occurs during runtime. private , final and static methods and variables use static binding and are bonded by compiler while virtual methods are bonded during runtime based upon runtime object.


What is Collections Framework?
The Java Collections Framework is a collection of interfaces and classes which helps in storing and processing the data efficiently. This framework has several useful classes which have tons of useful functions which makes a programmer task super easy.


What is Collection and Collections?

Collection : The root interface of java collections freamwork.
Collections : A utility class that is a member of the java collections freamwork.

Explain what is main method?
The main() method is the entry point into the application.

What is StringBuffer and String Builder?
StringBuffer is mutable means one can change the value of the object . The object created through StringBuffer is stored in the heap . StringBuffer has the same methods as the StringBuilder , but each method in StringBuffer is synchronized that is StringBuffer is thread safe

What do you understand by Thread Safe?
Thread safety is a computer programming concept applicable to multi-threaded code. Thread-safe code only manipulates shared data structures in a manner that ensures that all threads behave properly and fulfill their design specifications without unintended interaction.

